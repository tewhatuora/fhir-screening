@startuml seq-fhir-screening-API-acceptanceflow

autonumber "<b> 00"

skinparam ArrowFontSize 16
skinparam BoxPadding 10
skinparam dpi 400
skinparam MaxMessageSize 350
skinparam NoteFontSize 13
skinparam ParticipantPadding 5
skinparam responseMessageBelowArrow true
skinparam roundcorner 15
skinparam sequenceArrowThickness 2
skinparam SequenceMessageAlignment left
skinparam ArrowFontSize 12
skinparam sequenceStyle uml2
skinparam sequencegroupfontsize 14
' semi-transparent sequence groups!
' see https://sarafian.github.io/tips/2021/03/11/plantuml-tips-tricks-1.html#:~:text=responseMessageBelowArrow-,Semi,-transparent%20group%20backgrounds
skinparam SequenceGroupBodyBackgroundColor #EEEEFF50


scale max 400 width
scale 300*500

actor "health practitioner (screening)" as USER
participant "practitioner's APP/PMS" as APIC #Orange

box "HNZ digital services hub" #LightGrey
  entity "API authn. server" as ROSIE #IndianRed
  entity "API gateway" as APIG #IndianRed
end box

entity "**screening summary FHIR API**" as SCRAPI #LightSalmon
entity "NHI FHIR API" as NHI

autonumber stop

title "Practitioner acceptance of special terms for cervical screening API data access"

== initialisation ==

APIC -> ROSIE++: OAUTH2.0 Client Credentials Flow\n<size:10>(client creds, and requested scopes+audience)</size>
return OAUTH token
note right
  """scope": ["" 
    """system/DocumentReference.rs",""
    """system/Patient.r" ]""
  """aud": "https://fhir-ig.digital.health.nz/screening/StructureDefinition/nz-screening-summary"""
end note

== operations ==

USER -> APIC++ #YellowGreen: enter patient name, NHI
APIC -> NHI: NHI search
APIC -> USER--: present NHI matches

USER -> APIC++ #YellowGreen: request screening summaries for\n selected NHI and programme type 

APIC -> APIG: ""GET"" /**DocumentReference**?<params>
note right
  search request query parameters:
  ""?"" **subject:identifier** = <NHI>
  ""&"" **category** = <screening service type SNOMED>
  ""&"" **contenttype** = ""application/pdf""
  ""&"" **_include** = **DocumentReference:subject**
end note
APIG -> APIG: validate OAUTH token\n<size:10>(issuer)</size>

APIG -> SCRAPI++: ""GET /DocumentReference?..""

SCRAPI -> SCRAPI: validate OAUTH token\n<size:10>(issuer,token,scope,audience)</size>

SCRAPI -> SCRAPI: Search HPI register for Practitioner

alt#Red Practitioner not found in HPI
  SCRAPI -x APIC: HTTP ""400 Bad Request"" error: Invalid HPI Practitioner
end




alt#Orange No prior practitioner terms-acceptance found
  SCRAPI -x APIC: ERROR: Invalid or non-existent HPI Person
end



alt #LightGreen normal report generation
SCRAPI -> SCRAPI: get data from backend APIs
SCRAPI -> SCRAPI: generate screening summary content as HTML and PDF
SCRAPI -> SCRAPI: include participant data as ""Patient"" instance
SCRAPI -> APIC: ""200 OK"", FHIR searchset ""Bundle"" 
  note left of SCRAPI #LightYellow
    In normal search response is a FHIR searchset Bundle.  Each
      Bundle entry comprises a ""DocumentReference (mode:#match)"" containing 
      the formatted screening summary, AND a ""Patient (mode:#include)"" 
      instance for the patient demographic detail
  end note

else #Orange No screening summary is available 
SCRAPI -> APIC: ""200 OK"", ""Bundle"" of ""mode: #outcome""
  note left of SCRAPI #Orange
    When no screening history is available for the specified 
    subject for some reason, the Bundle contains one or more
    OperationOutcome(s) (""mode: #outcome"") describing the reason(s).
    end note
else #Red technical error
  SCRAPI -> APIC--: HTTP ""4xx|5xx"" error code
  note left of SCRAPI #IndianRed
    In technical error scenarios, the response 
    is just a FHIR ""OperationOutcome""
  end note
end

APIC -> APIC: process results and determine what to display for user 

APIC -> USER--: present screening summary / search result

@enduml