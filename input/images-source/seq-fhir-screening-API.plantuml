@startuml seq-fhir-screening-API

autonumber "<b> 00"

skinparam ArrowFontSize 16
skinparam BoxPadding 10
skinparam dpi 400
skinparam MaxMessageSize 350
skinparam NoteFontSize 13
skinparam ParticipantPadding 5
skinparam responseMessageBelowArrow true
skinparam roundcorner 15
skinparam sequenceArrowThickness 2
skinparam SequenceMessageAlignment left
skinparam ArrowFontSize 12
skinparam sequenceStyle uml2
skinparam sequencegroupfontsize 14
' semi-transparent sequence groups!
' see https://sarafian.github.io/tips/2021/03/11/plantuml-tips-tricks-1.html#:~:text=responseMessageBelowArrow-,Semi,-transparent%20group%20backgrounds
skinparam SequenceGroupBodyBackgroundColor #EEEEFF50


scale max 400 width
scale 300*500

actor "health practitioner (screening)" as USER
participant "practitioner's APP/PMS" as APIC #Orange

box "HNZ digital services hub" #LightGrey
  entity "API authn. server" as ROSIE #IndianRed
  entity "API gateway" as APIG #IndianRed
end box

entity "**screening summary FHIR API**" as FHIR #LightSalmon
entity "NHI FHIR API" as NHI

autonumber stop

title "PMS search for screening summary(s) using FHIR screening API"

== initialisation ==

APIC -> ROSIE++: OAUTH2.0 Client Credentials Flow\n<size:10>(client credentials and requested scope)</size>
return OAUTH token
note right
  ""scopes:"" 
    **system/DocumentReference.rs?category=http://snomed.info/sct|1230046007**
    **system/Patient.r**
  ""aud:"" **https://api.{env}.nss.digital.health.nz**
end note

== operations ==

USER -> APIC++ #YellowGreen: enter patient name, NHI
APIC -> NHI: NHI search
APIC -> USER--: present NHI matches

USER -> APIC++ #YellowGreen: request screening summaries for\n selected NHI and programme type 

APIC -> APIG: ""GET"" /**DocumentReference**?<params>
note right
  search request query parameters:
  ""?"" **subject:identifier** = <NHI>
  ""&"" **category** = <screening service type SNOMED>
  ""&"" **contenttype** = ""application/pdf""
  ""&"" **_include** = **DocumentReference:subject**
end note
APIG -> APIG: validate OAUTH token\n<size:10>(issuer,token,scopes,sig)</size>
APIG -> FHIR++: ""GET /DocumentReference?..""
' FHIR -> FHIR: validate OAUTH token\n<size:10>(issuer,token,scopes,sig)</size>
alt #LightGreen normal report generation
FHIR -> FHIR: get data from backend APIs
FHIR -> FHIR: generate screening summary content as HTML and PDF
FHIR -> FHIR: include participant data as ""Patient"" instance
FHIR -> APIC: ""200 OK"", FHIR searchset ""Bundle"" 
  note left of FHIR #LightYellow
    In normal search response is a FHIR searchset Bundle.  Each
      Bundle entry comprises a ""DocumentReference (mode:#match)"" containing 
      the formatted screening summary, AND a ""Patient (mode:#include)"" 
      instance for the patient demographic detail
  end note

else #Orange No screening summary is available 
FHIR -> APIC: ""200 OK"", ""Bundle"" of ""mode: #outcome""
  note left of FHIR #Orange
    When no screening history is available for the specified 
    subject for some reason, the Bundle contains one or more
    OperationOutcome(s) (""mode: #outcome"") describing the reason(s).
    end note
else #Red technical error
  FHIR -> APIC--: HTTP ""4xx|5xx"" error code
  note left of FHIR #IndianRed
    In technical error scenarios, the response 
    is just a FHIR ""OperationOutcome""
  end note
end

APIC -> APIC: process results and determine what to display for user 

APIC -> USER--: present screening summary / search result


' newpage PMS retrieve a specific version of a patient's screening history using FHIR screening API (2 of 2)

' actor "health practitioner (screening)" as USER
' participant "practitioner's APP/PMS" as APIC #Orange

' box "HNZ digital services hub" #LightGrey
'   entity "API authn. server" as ROSIE #IndianRed
'   entity "API gateway" as APIG #IndianRed
' end box

' entity "**screening summary FHIR API**" as FHIR #LightSalmon
' entity "NHI FHIR API" as NHI

' autonumber stop

' APIC -> ROSIE++: OAUTH2.0 Client Credentials Flow\n<size:10>(client credentials and requested scope)</size>
' return OAUTH token

' USER -> APIC++ #YellowGreen: request specific version of a patient\n cervical screening summary doc

' note right of APIC #LightYellow
'   The app may request a DocumentReference instance by specific logical identifier 
'   as returned by an earlier screening summary search interaction.
' end note

' APIC -> APIG: ""GET"" /**DocumentReference/{logical instance identifier}**
' APIG -> APIG: validate OAUTH token\n<size:10>(issuer,token,scopes,sig)</size>
' APIG -> FHIR++: ""GET /DocumentReference/..""
' FHIR -> FHIR: validate OAUTH token\n<size:10>(issuer,token,scopes,sig)</size>
' alt #LightGreen normal report generation
' FHIR -> FHIR: generate/retrieve screening summary
' FHIR -> APIC: ""200 OK"", one specific FHIR ""DocumentReference"" instance
' else #Orange instance doesn't exist
' FHIR -> APIC: ""404 NOT FOUND""
' else #Red technical error
' FHIR -> APIC: HTTP ""4xx|5xx"" error code, FHIR ""OperationOutcome""
' end

' APIC -> USER: present screening summary / search result

@enduml