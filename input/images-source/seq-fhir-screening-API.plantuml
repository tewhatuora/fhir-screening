@startuml seq-fhir-screening-API

autonumber "<b> 00"

skinparam ArrowFontSize 16
skinparam BoxPadding 10
skinparam dpi 400
skinparam MaxMessageSize 350
skinparam NoteFontSize 13
skinparam ParticipantPadding 5
skinparam responseMessageBelowArrow true
skinparam roundcorner 15
skinparam sequenceArrowThickness 2
skinparam SequenceMessageAlignment left
skinparam ArrowFontSize 12
skinparam sequenceStyle uml2
skinparam sequencegroupfontsize 14
' semi-transparent sequence groups!
' see https://sarafian.github.io/tips/2021/03/11/plantuml-tips-tricks-1.html#:~:text=responseMessageBelowArrow-,Semi,-transparent%20group%20backgrounds
skinparam SequenceGroupBodyBackgroundColor #EEEEFF50


scale max 400 width
scale 300*500

actor "health practitioner (screening)" as USER
participant "practitioner's APP/PMS" as APIC #Orange

box "HNZ digital services hub" #LightGrey
  entity "API authn. server" as ROSIE #IndianRed
  entity "API gateway" as APIG #IndianRed
end box

entity "**screening summary FHIR API**" as FHIR #LightSalmon
entity "NHI FHIR API" as NHI

autonumber stop

title "PMS search for screening history using FHIR screening API (1 of 2)"

APIC -> ROSIE++: OAUTH2.0 Client Credentials Flow\n<size:10>(client credentials and requested scope)</size>
return OAUTH token

USER -> APIC++ #YellowGreen: enter patient name, NHI
APIC -> NHI: NHI search
APIC -> USER--: present NHI matches

USER -> APIC++ #YellowGreen: request screening summaries for\n selected NHI and programme type 

APIC -> APIG: ""GET"" /**DocumentReference**?\n\t**subject**={{NHI}}&*\n\t**type**={{SNOMED Summary clinical document}}&\n\t**category**={{SNOMED screening programme type}}
APIG -> APIG: validate OAUTH token\n<size:10>(issuer,token,scopes,sig)</size>
APIG -> FHIR++: ""GET /DocumentReference?..""
FHIR -> FHIR: validate OAUTH token\n<size:10>(issuer,token,scopes,sig)</size>
alt #LightGreen normal report generation
FHIR -> FHIR: generate screening summary
FHIR -> APIC: ""200 OK"", FHIR ""DocumentReference Bundle"" (1 or more instances)
APIC -> APIC: record instance logical identifier(s)
note right of APIC #LightYellow: The API consumer can use the instance's logical identifier to later directly retrieve it, instead of searching.

else #Orange patient NHI doesn't exist
FHIR -> APIC: ""200 OK"", empty ""Bundle""
else #Red technical error
FHIR -> APIC--: HTTP ""4xx|5xx"" error code, FHIR ""OperationOutcome""
end

APIC -> USER--: present screening summary / search result


newpage PMS retrieve a specific version of a patient's screening history using FHIR screening API (2 of 2)

actor "health practitioner (screening)" as USER
participant "practitioner's APP/PMS" as APIC #Orange

box "HNZ digital services hub" #LightGrey
  entity "API authn. server" as ROSIE #IndianRed
  entity "API gateway" as APIG #IndianRed
end box

entity "**screening summary FHIR API**" as FHIR #LightSalmon
entity "NHI FHIR API" as NHI

autonumber stop

APIC -> ROSIE++: OAUTH2.0 Client Credentials Flow\n<size:10>(client credentials and requested scope)</size>
return OAUTH token

USER -> APIC++ #YellowGreen: request specific version of a patient\n cervical screening summary doc

note right of APIC #LightYellow
  The app may request a DocumentReference instance by specific logical identifier 
  as returned by an earlier screening summary search interaction.
end note

APIC -> APIG: ""GET"" /**DocumentReference/{{logical identifier}}**
APIG -> APIG: validate OAUTH token\n<size:10>(issuer,token,scopes,sig)</size>
APIG -> FHIR++: ""GET /DocumentReference/..""
FHIR -> FHIR: validate OAUTH token\n<size:10>(issuer,token,scopes,sig)</size>
alt #LightGreen normal report generation
FHIR -> FHIR: generate/retrieve screening summary
FHIR -> APIC: ""200 OK"", one specific FHIR ""DocumentReference"" instance
else #Orange instance doesn't exist
FHIR -> APIC: ""404 NOT FOUND""
else #Red technical error
FHIR -> APIC: HTTP ""4xx|5xx"" error code, FHIR ""OperationOutcome""
end

APIC -> USER: present screening summary / search result

@enduml