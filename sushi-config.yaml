# ╭─────────────────────────Commonly Used ImplementationGuide Properties───────────────────────────╮
# │  The properties below are used to create the ImplementationGuide resource. The most commonly   │
# │  used properties are included. For a list of all supported properties and their functions,     │
# │  see:e.                                         │
# ╰────────────────────────────────────────────────────────────────────────────────────────────────╯
id: tewhatuora.fhir.screening
canonical: https://build.fhir.org/ig/tewhatuora/fhir-screening.fhir.ig
name: Health NZ | Te Whatu Ora FHIR Screening Implementation Guide
title: Health NZ | Te Whatu Ora FHIR Screening Implementation Guide
description: Health NZ | Te Whatu Ora FHIR Screening Implementation Guide
status: draft
version: 0.9.2
fhirVersion: 4.0.1
copyrightYear: 2024+
releaseLabel: draft # ci-build | draft | qa-preview | ballot | trial-use | release | update | normative+trial-use
# license: CC0-1.0 # https://www.hl7.org/fhir/valueset-spdx-license.html
jurisdiction: urn:iso:std:iso:3166#NZ "New Zealand"
publisher:
  name: Health New Zealand | Te Whatu Ora
  url: https://www.tewhatuora.govt.nz/
  email: test@example.org

# The dependencies property corresponds to IG.dependsOn. The key is the
# package id and the value is the version (or dev/current). For advanced
# use cases, the value can be an object with keys for id, uri, and version.
#
dependencies:
  fhir.org.nz.ig.base: 
    uri: http://fhir.org.nz/ig/base/ImplementationGuide/fhir.org.nz.ig.base
    version: 3.0.0
#  hl7.fhir.uv.sdc: 3.0.0


# The parameters property represents IG.definition.parameter. Rather
# than a list of code/value pairs (as in the ImplementationGuide
# resource), the code is the YAML key. If a parameter allows repeating
# values, the value in the YAML should be a sequence/array. 
# For definitions of available parameters see:
#  https://build.fhir.org/ig/FHIR/fhir-tools-ig/CodeSystem-ig-parameters.html
#  https://confluence.hl7.org/display/FHIR/Implementation+Guide+Parameters
#
parameters:
  show-inherited-invariants: false
  bundle-references-resolve: false
  default-contact: true
  apply-version: false
  default-version: true
  suppressed-ids: $examples
  display-warnings: true
  excludexml: true
  excludettl: true
  no-narrative: 
  - DocumentReference/*     #  Because this IG attaches HTML, by default, in the .content section, not in .text narrative
  - Bundle/*
  - Patient/*

#   validation: [allow-any-extensions, no-broken-links]
#
menu:
  Home: index.html
  Business view: businessview.html
#  Onboarding: onboarding.html
  Use cases: usecases.html
  Example screening summaries: 
    screening summary full history report: renderedexample-fullreport.html
    screening summary report (participant info only): renderedexample-participantonly.html
    HTML sample (full report): mock-full-report.html
    HTML sample (deceased with screening history): mock-deceased-report.html
  Artifacts: artifacts.html
  Developer Support:
    Artifacts (Json): definitions.json.zip
    Artifacts (Xml): definitions.xml.zip
    Changelog: changelog.html
    API sequence diagram: sequence.html
    Gender NSS-FHIR translation: gender.html
    Search behaviour: search.html
    Download IG : full-ig.zip
    OpenAPI Specification: FHIRScreeningCapabilityStatement.openapi.json

contact:
   - name: David Grainger
     telecom:
       - system: email 
         value: david.grainger@middleware.co.nz
         use: work

#
# The global property corresponds to the IG.global property, but it
# uses the type as the YAML key and the profile as its value. Since
# FHIR does not explicitly disallow more than one profile per type,
# neither do we; the value can be a single profile URL or an array
# of profile URLs. If a value is an id or name, SUSHI will replace
# it with the correct canonical when generating the IG JSON.
#
# global:
#   Patient: http://example.org/fhir/StructureDefinition/my-patient-profile
#   Encounter: http://example.org/fhir/StructureDefinition/my-encounter-profile
#
#
# The resources property corresponds to IG.definition.resource.
# SUSHI can auto-generate all of the resource entries based on
# the FSH definitions and/or information in any user-provided
# JSON or XML resource files. If the generated entries are not
# sufficient or complete, however, the author can add entries
# here. If the reference matches a generated entry, it will
# replace the generated entry. If it doesn't match any generated
# entries, it will be added to the generated entries. The format
# follows IG.definition.resource with the following differences:
#   * use IG.definition.resource.reference.reference as the YAML key.
#   * if the key is an id or name, SUSHI will replace it with the
#     correct URL when generating the IG JSON.
#   * specify "omit" to omit a FSH-generated resource from the
#     resource list.
#   * if the exampleCanonical is an id or name, SUSHI will replace
#     it with the correct canonical when generating the IG JSON.
#   * groupingId can be used, but top-level groups syntax may be a
#     better option (see below).
# The following are simple examples to demonstrate what this might
# look like:
#
# resources:
#   Patient/my-example-patient:
#     name: My Example Patient
#     description: An example Patient
#     exampleBoolean: true
#   Patient/bad-example: omit
#
#
# Groups can control certain aspects of the IG generation.  The IG
# documentation recommends that authors use the default groups that
# are provided by the templating framework, but if authors want to
# use their own instead, they can use the mechanism below.  This will
# create IG.definition.grouping entries and associate the individual
# resource entries with the corresponding groupIds. If a resource
# is specified by id or name, SUSHI will replace it with the correct
# URL when generating the IG JSON.
#
# groups:
#   GroupA:
#     name: Group A
#     description: The Alpha Group
#     resources:
#     - StructureDefinition/animal-patient
#     - StructureDefinition/arm-procedure
#   GroupB:
#     name: Group B
#     description: The Beta Group
#     resources:
#     - StructureDefinition/bark-control
#     - StructureDefinition/bee-sting
#
#
# The ImplementationGuide resource defines several other properties
# not represented above. These properties can be used as-is and
# should follow the format defined in ImplementationGuide:
# * date
# * meta
# * implicitRules
# * language
# * text
# * contained
# * extension
# * modifierExtension
# * experimental
# * useContext
# * copyright
# * packageId
#
#
# ╭──────────────────────────────────────────SUSHI flags───────────────────────────────────────────╮
# │  The flags below configure aspects of how SUSHI processes FSH.                                 │
# ╰────────────────────────────────────────────────────────────────────────────────────────────────╯
# The FSHOnly flag indicates if only FSH resources should be exported.
# If set to true, no IG related content will be generated.
# The default value for this property is false.
#
# FSHOnly: false
#
#
# When set to true, the "short" and "definition" field on the root element of an Extension will
# be set to the "Title" and "Description" of that Extension. Default is true.
#
# applyExtensionMetadataToRoot: true
#
#
# The instanceOptions property is used to configure certain aspects of how SUSHI processes instances.
# See the individual option definitions below for more detail.
#
# instanceOptions:
#   Determines for which types of Instances SUSHI will automatically set meta.profile
#   if InstanceOf references a profile:
#
#   setMetaProfile: always # always | never | inline-only | standalone-only
#
#
#   Determines for which types of Instances SUSHI will automatically set id
#   if InstanceOf references a profile:
#
#   setId: always # always | standalone-only